steps:
  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), in(variables['Build.SourceBranchName'], 'master', 'dev' )) }}:
    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Prepare analysis on SonarQube for Normal Builds'
      inputs:
        SonarQube: SonarQube
        scannerMode: Other
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          sonar.exclusions=$(sonarExclusions)
          sonar.projectName=$(sonarProjectName)
          sonar.projectKey=$(sonarProjectKey)
          sonar.projectVersion=$(Build.BuildNumber)
         
          #Coverage Report
          sonar.coverage.exclusions="$(sonarCoverageExclusions)"
          sonar.java.coveragePlugin=jacoco
          sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/jacoco$(variantName)TestReport/jacoco$(variantName)TestReport.xml

  - ${{ if and(ne(variables['Build.Reason'], 'PullRequest'), notin(variables['Build.SourceBranchName'], 'master', 'dev' )) }}:
    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Prepare analysis on SonarQube for Branch Analysis'
      inputs:
        SonarQube: SonarQube
        scannerMode: Other
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          sonar.exclusions= $(sonarExclusions)
          sonar.projectName=$(sonarProjectName)
          sonar.projectKey=$(sonarProjectKey)
          sonar.projectVersion=$(Build.BuildNumber)
          
          sonar.branch.name=$(Build.SourceBranchName)
          sonar.branch.target=$(sonarBaseBranch)
         
          #Coverage Report
          sonar.coverage.exclusions="$(sonarCoverageExclusions)"
          sonar.java.coveragePlugin=jacoco
          sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/jacoco$(variantName)TestReport/jacoco$(variantName)TestReport.xml
          
  - ${{ if eq(variables['Build.Reason'], 'PullRequest') }}:
    - bash: |
        strippedSourceBranchName="$(echo $(System.PullRequest.SourceBranch) | sed  's/refs\/heads\///g')"
        strippedTargetBranchName="$(echo $(System.PullRequest.TargetBranch) | sed  's/refs\/heads\///g')"

        echo "##vso[task.setvariable variable=strippedSourceBranchName]$strippedSourceBranchName"
        echo "##vso[task.setvariable variable=strippedTargetBranchName]$strippedTargetBranchName"

        echo "Sonar Pull Request Analysis $strippedSourceBranchName => $strippedTargetBranchName"
      displayName: "Format branch names for SonarQube"

    - task: SonarSource.sonarqube.15B84CA1-B62F-4A2A-A403-89B77A063157.SonarQubePrepare@4
      displayName: 'Prepare analysis on SonarQube for Pull Requests'
      inputs:
        SonarQube: SonarQube
        scannerMode: Other
        extraProperties: |
          # Additional properties that will be passed to the scanner, 
          # Put one key=value per line, example:
          sonar.exclusions=$(sonarExclusions)
          sonar.projectName=$(sonarProjectName)
          sonar.projectKey=$(sonarProjectKey)
          sonar.projectVersion=$(Build.BuildNumber)

          sonar.pullrequest.branch=$(strippedSourceBranchName)
          sonar.pullrequest.base=$(strippedTargetBranchName)
         
          #Coverage Report
          sonar.coverage.exclusions=$(sonarCoverageExclusions)
          sonar.java.coveragePlugin=jacoco
          sonar.coverage.jacoco.xmlReportPaths=build/reports/jacoco/jacoco$(variantName)TestReport/jacoco$(variantName)TestReport.xml      
    
  
  - task: Gradle@2
    displayName: 'Unit Test'
    inputs:
      workingDirectory: ''
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      publishJUnitResults: true
      testResultsFiles: '**/TEST-*.xml'    
      testRunTitle: 'Unit Testing'
      tasks: 'jacoco$(variantName)TestReport --stacktrace --info'
      sonarQubeRunAnalysis: true
      sqGradlePluginVersionChoice: 'specify'
      sonarQubeGradlePluginVersion: '3.3'

  - task: PublishCodeCoverageResults@1
    displayName: 'Publish coverage report'
    inputs:
      codeCoverageTool: 'JaCoCo'
      pathToSources: $(System.DefaultWorkingDirectory)/$(packageName)/$(coverageSrcDirectory)/
      summaryFileLocation: $(System.DefaultWorkingDirectory)/$(packageName)/build/reports/jacoco/jacoco$(variantName)TestReport/jacoco$(variantName)TestReport.xml
      additionalCodeCoverageFiles: $(System.DefaultWorkingDirectory)/$(packageName)/build/jacoco/test$(variantName)UnitTest.exec
      reportDirectory: $(System.DefaultWorkingDirectory)/$(packageName)/build/reports/jacoco/jacoco$(variantName)TestReport/html/
      failIfCoverageEmpty: false

  - task: SonarSource.sonarqube.291ed61f-1ee4-45d3-b1b0-bf822d9095ef.SonarQubePublish@4
    displayName: 'Publish Quality Gate Result'

  - task: SimondeLang.sonar-buildbreaker.sonar-buildbreaker.sonar-buildbreaker@7
    displayName: 'Break build on quality gate failure'
    inputs:
      SonarQube: SonarQube
